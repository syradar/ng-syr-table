{"version":3,"sources":["./src/app/app.component.css","./src/app/shared/services/holding.service.ts","./src/environments/environment.prod.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/services/table.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.cfdc93de146fe33c10af.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HoldingService {\n  holdings$: Observable<Holding[]> = of([\n    {\n      name: 'SEB A',\n      performance: 1.21233,\n      marketValue: 123_132,\n    },\n    {\n      name: 'Investor B',\n      performance: 0.231231,\n      marketValue: 25900,\n    },\n    {\n      name: 'JM',\n      performance: 0.4585,\n      marketValue: 5938,\n    },\n  ]).pipe(shareReplay());\n\n  constructor() {}\n\n  getHoldings(): Observable<Holding[]> {\n    return this.holdings$;\n  }\n}\n\ninterface Holding {\n  name: string;\n  performance: number;\n  marketValue: number;\n}\n","export const environment = {\n  production: true,\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, scan, shareReplay, startWith } from 'rxjs/operators';\nimport { HoldingService } from './shared/services/holding.service';\nimport { HoldingColumns, Table, TableService } from './shared/services/table.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = 'syr-table';\n  // Data that we get from Table Service\n  tableData$ = new ReplaySubject<Table<HoldingColumns>>();\n\n  // Action Stream from the button\n  columnFilter$ = new ReplaySubject<HoldingColumns | undefined>(1);\n\n  // Combine data and action like something from Redux\n  tableToDisplay$ = combineLatest([\n    this.tableData$,\n    this.columnFilter$.pipe(startWith(undefined)),\n  ]).pipe(\n    // scan is like reduce, so here we toggle the filter\n    scan((old, newFilter) =>\n      old[1] === newFilter[1] ? [newFilter[0], undefined] : newFilter\n    ),\n    // Filter out the data from the table\n    map(([data, columnFilter]) => {\n      return {\n        ...data,\n        header: {\n          ...data.header,\n          headers: data.header.headers.filter((h) => h.column !== columnFilter),\n        },\n        rows: data.rows.map((row) => ({\n          cells: row.cells.filter((cell) => cell.column !== columnFilter),\n        })),\n      };\n    })\n  );\n\n  constructor(\n    private holdingService: HoldingService,\n    private tableService: TableService\n  ) {\n    // Get holding data\n    this.holdingService.getHoldings().subscribe({\n      next: (holdings) => {\n        const hs = holdings.map((h) => ({\n          cells: [\n            {\n              column: HoldingColumns.Name,\n              value: h.name,\n            },\n            {\n              column: HoldingColumns.Performance,\n              value: h.performance,\n            },\n            {\n              column: HoldingColumns.MarketValue,\n              value: h.marketValue,\n            },\n          ],\n        }));\n\n        // Create a table from holding data and emit\n        this.tableData$.next(this.tableService.getTable(hs));\n      },\n    });\n  }\n\n  hidePerformance(_: unknown) {\n    // Emit filter action\n    this.columnFilter$.next(HoldingColumns.Performance);\n  }\n}\n","export default \"<div class=\\\"container mx-auto mt-16\\\">\\n  <div class=\\\"bg-white shadow p-4\\\">\\n    <h2 class=\\\"text-xl font-semibold mb-4\\\">Mina innehav</h2>\\n\\n    <button class=\\\"py-2 px-4 bg-gray-300 hover:bg-blue-500 hover:text-white rounded-full\\\"\\n            (click)=\\\"hidePerformance($event)\\\">Toggle\\n      Performance</button>\\n\\n    <table class=\\\"block lg:table table-auto mt-8 w-full\\\" *ngIf=\\\"tableToDisplay$ | async as table\\\">\\n      <thead class=\\\"hidden lg:table-header-group\\\">\\n        <tr>\\n          <th *ngFor=\\\"let header of table.header.headers\\\" [ngClass]=\\\"{'text-right': header.column !== 0}\\\"\\n              class=\\\"text-left p-1 border-b border-gray-500\\\">\\n            {{header.label}}\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody class=\\\"w-full block lg:table-row-group\\\">\\n        <tr *ngFor=\\\"let row of table.rows\\\"\\n            class=\\\"flex flex-wrap border-b lg:border-none py-2 lg:py-0 justify-between lg:table-row w-full\\\">\\n          <td *ngFor=\\\"let cell of row.cells\\\"\\n              [ngClass]=\\\"{'text-right': cell.column !== 0, 'font-bold lg:font-normal w-full': cell.column === 0}\\\"\\n              class=\\\"p-1 lg:border-b border-gray-200 block lg:table-cell\\\">\\n            <div class=\\\"block lg:hidden text-sm\\\" [ngClass]=\\\"{ 'hidden': cell.column === 0}\\\">\\n              {{cell.lable}}\\n            </div>\\n            <div class=\\\"block lg:inline\\\">\\n              {{cell.value}}\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <!-- <tfoot>\\n    <tr>\\n      <td>sum</td>\\n      <td></td>\\n      <td>123 SEK</td>\\n    </tr>\\n  </tfoot> -->\\n    </table>\\n  </div>\\n\\n</div>\\n\";","import { registerLocaleData } from '@angular/common';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport localeSv from '@angular/common/locales/sv';\nregisterLocaleData(localeSv);\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [{ provide: LOCALE_ID, useValue: 'fr-FR' }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { formatCurrency, formatNumber, formatPercent } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor() {}\n\n  getTable(rows: RawRowData<HoldingColumns>[]): Table<HoldingColumns> {\n    const mappedRows: TableRow<HoldingColumns>[] = rows.map((row) => ({\n      cells: row.cells.map((c) =>\n        createTableCell(holdingColumnName)(\n          c.column,\n          holdingCellFormatter(c.column, c.value)\n        )\n      ),\n    }));\n\n    const table: Table<HoldingColumns> = {\n      header: createHeaders(mappedRows[0], holdingColumnName),\n      sort: false,\n      rows: mappedRows,\n    };\n\n    return table;\n  }\n\n  // removeColumn<C>(table: Table<C>, column: C): Table<C> {\n  //   const newHeaders = table.header.headers.filter((h) => h.column !== column);\n  //   const newRows = table.rows.map((row) => ({\n  //     cells: row.cells.filter((cell) => cell.column !== column),\n  //   }));\n\n  //   return {\n  //     header: {\n  //       headers: newHeaders,\n  //     },\n  //     rows: newRows,\n  //     sort: table.sort,\n  //   };\n  // }\n}\n\nexport interface RawRowData<C> {\n  cells: RawCellData<C>[];\n}\n\nexport interface RawCellData<C> {\n  column: C;\n  value: string | number;\n}\n\nexport interface TableCell<C> {\n  column: C;\n  value: string;\n  lable: string;\n  enabled: boolean;\n}\n\nexport interface TableRow<C> {\n  cells: TableCell<C>[];\n}\n\nexport interface TableHeaderRow<C> {\n  headers: TableHeader<C>[];\n}\n\nexport interface TableHeader<C> {\n  column: C;\n  label: string;\n  sort: boolean;\n  enabled: boolean;\n}\n\nexport interface Table<C> {\n  header: TableHeaderRow<C>;\n  rows: TableRow<C>[];\n  sort: boolean;\n}\n\nexport enum HoldingColumns {\n  Name,\n  Performance,\n  MarketValue,\n}\n\nexport const holdingColumnName = (hc: HoldingColumns): string => {\n  switch (hc) {\n    case HoldingColumns.Name:\n      return 'Name';\n    case HoldingColumns.Performance:\n      return 'Performance';\n    case HoldingColumns.MarketValue:\n      return 'MarketValue';\n  }\n};\n\nexport const holdingCellFormatter = (\n  hc: HoldingColumns,\n  value: string | number\n): string => {\n  switch (hc) {\n    case HoldingColumns.Name:\n      return value.toString();\n    case HoldingColumns.Performance:\n      return typeof value === 'number' ? formatPercent(value, 'sv', '1.2-2') : value;\n    case HoldingColumns.MarketValue:\n      return typeof value === 'number'\n        ? formatCurrency(value, 'sv', '', 'SEK', '1.2-2')\n        : value;\n  }\n};\n\nexport const createTableCell =\n  <C>(labelFunction: (column: C) => string) =>\n  (column: C, value: string): TableCell<C> => ({\n    column,\n    lable: labelFunction(column),\n    value,\n    enabled: true,\n  });\n\nexport const createHeaders = <C>(\n  row: TableRow<C>,\n  labelFunction: (column: C) => string\n): TableHeaderRow<C> => {\n  return {\n    headers: row.cells.map((c) => ({\n      column: c.column,\n      sort: false,\n      label: labelFunction(c.column),\n      enabled: true,\n    })),\n  };\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}